#!/bin/bash 


echo "----------------------" 

echo " BASIC INSTALL SCRIPT " 

echo "----------------------" 
#### 1. nano /etc/resolve.conf -2x DNS
sleep 3

timedatectl set-timezone Europe/Berlin 
sed -i 's/pool/#pool/g' /etc/chrony.conf
echo 'server 10.0.10.1' >> /etc/chrony.conf
echo 'server 10.0.10.2' >> /etc/chrony.conf

service chronyd restart 
sudo systemctl enable --now chronyd

service firewalld stop

systemctl disable firewalld

sed -i 's/enforcing/permissive/g' /etc/selinux/config


echo "----------------------" 

echo " FIREWALL DISABLED && SELINUX DISABLED " 

echo "----------------------" 

sleep 3
echo "----------------------" 

echo " ELASTIC 3 NODES INSTALL " 

echo "----------------------" 

alias rs='systemctl restart elasticsearch'

echo 'alias rs='systemctl restart elasticsearch'' >> ~/.bashrc

sleep 3

echo '/etc/hosts config '

ip1="10.0.10.11"
host1="node01"
ip2="10.0.10.12"
host2="node02"
ip3="10.0.10.13"
host3="node03"
domain="diosen.de"


echo $ip1 $host1 $host1.$domain >> /etc/hosts
echo $ip2 $host2 $host2.$domain >> /etc/hosts
echo $ip3 $host3 $host3.$domain >> /etc/hosts

echo $ip1 $host1 $host1.$domain '---written in /etc/hosts'
echo $ip2 $host2 $host2.$domain '---written in /etc/hosts'
echo $ip3 $host3 $host3.$domain '---written in /etc/hosts'

cat /etc/hosts
sleep 5


yum update -y 

yum install nano sudo ca-certificates net-tools -y

echo "----------------------" 

echo " ELK REPO " 

echo "----------------------" 

yum -y install java-1.8.0-openjdk  java-1.8.0-openjdk-devel unzip
yum update -y 

rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch

# Add Elastic Repos

echo '
[elasticsearch]
name=Elasticsearch repository for 7.x packages
baseurl=https://artifacts.elastic.co/packages/7.x/yum
gpgcheck=1
gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
enabled=0
autorefresh=1
type=rpm-md' > /etc/yum.repos.d/elasticsearch.repo

echo '
[kibana-7.x]
name=Kibana repository for 7.x packages
baseurl=https://artifacts.elastic.co/packages/7.x/yum
gpgcheck=1
gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
enabled=1
autorefresh=1
type=rpm-md' > /etc/yum.repos.d/kibana.repo
	
echo '
[logstash-7.x]
name=Elastic repository for 7.x packages
baseurl=https://artifacts.elastic.co/packages/7.x/yum
gpgcheck=1
gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
enabled=1
autorefresh=1
type=rpm-md' > /etc/yum.repos.d/logstash.repo

yum install --enablerepo=elasticsearch elasticsearch -y


systemctl enable elasticsearch

yum -y install metricbeat

systemctl enable metricbeat

mkdir /etc/elasticsearch/security
mkdir /etc/metricbeat/security

######nur für node 1 ######

/usr/share/elasticsearch/bin/elasticsearch-certutil ca -days 1825 ca-dn "cluster"
/usr/share/elasticsearch/bin/elasticsearch-certutil cert --ca elastic-stack-ca.p12 --days 1824 --dns $host1,$host2,$host3

## händisch##


echo '
[req] 
distinguished_name = req_distinguished_name 
req_extensions = v3_req 
prompt = no 
[req_distinguished_name] 
C = DE 
ST = BY 
L = Waldkraiburg 
O = DIOSEN
OU = DO 
CN = DO
[v3_req] 
keyUsage = keyEncipherment, dataEncipherment 
extendedKeyUsage = serverAuth 
subjectAltName = @alt_names 
[alt_names] 
DNS.1 = node01.diosen.de 
DNS.2 = node01
DNS.3 = node02.diosen.de
DNS.4 = node02
DNS.5 = node03.diosen.de' > ~/req.conf

openssl req -nodes -new -newkey rsa:2048 -sha256 -keyout http.key -out csr.pem -config req.conf

nano http.pem
nano ca.pem

###weiter mit script###

openssl pkcs12 -export -out es.p12 -inkey http.key -in http.pem -certfile ca.pem

yum install ca-certificates
update-ca-trust force-enable
cp ca.pem /etc/pki/ca-trust/source/anchors/ca.crt
update-ca-trust extract

cp ~/ca.pem /etc/metricbeat/security/
cp /usr/share/elasticsearch/elastic-certificates.p12 /etc/elasticsearch/security/stack.p12
cp ~/es.p12 /etc/elasticsearch/security/es.p12
chmod -R 0750 /etc/elasticsearch/security
##
scp /etc/elasticsearch/security/* root@node02:/etc/elasticsearch/security/
scp ~/ca.pem root@node02:~/
scp /etc/elasticsearch/security/* root@node03:/etc/elasticsearch/security/
scp ~/ca.pem root@node03:~/
ssh root@node02 "cp ~/ca.pem /etc/metricbeat/security/ && yum -y install ca-certificates && update-ca-trust force-enable && cp ~/ca.pem /etc/pki/ca-trust/source/anchors/ca.crt && update-ca-trust extract"
exit
###script cert bis hier ok#####
ssh root@node03 "cp ~/ca.pem /etc/metricbeat/security/ && yum -y install ca-certificates && update-ca-trust force-enable && cp ~/ca.pem /etc/pki/ca-trust/source/anchors/ca.crt && update-ca-trust extract"
exit

echo "----------------------" 

echo " ES NODE CONFIG " 

echo "----------------------" 

echo 'cluster.name: es-cluster
node.name: ${HOSTNAME}
network.host: 0.0.0.0
http.port: 9200

discovery.zen.minimum_master_nodes: 2
cluster.initial_master_nodes: "node01,node02,node03"
discovery.seed_hosts: "node01:9300,node02:9300,node03:9300"

node.master: true
node.data: true
node.ml: false

xpack.security.enabled: true
xpack.security.transport.ssl.enabled: true
xpack.security.transport.ssl.verification_mode: certificate
xpack.security.transport.ssl.keystore.path: security/stack.p12
xpack.security.transport.ssl.truststore.path: security/stack.p12
xpack.security.http.ssl.enabled: true
xpack.security.http.ssl.keystore.path: security/es.p12
xpack.security.http.ssl.truststore.path: security/es.p12
xpack.security.http.ssl.verification_mode: certificate
xpack.security.authc.api_key.enabled: true

xpack.monitoring.elasticsearch.collection.enabled: false
xpack.monitoring.collection.enabled: true

path.data: /var/lib/elasticsearch
path.logs: /var/log/elasticsearch' > ~/elasticsearch.yml

cp ~/elasticsearch.yml /etc/elasticsearch/elasticsearch.yml

scp ~/elasticsearch.yml root@node02:/etc/elasticsearch/elasticsearch.yml
scp ~/elasticsearch.yml root@node03:/etc/elasticsearch/elasticsearch.yml


alias rs='systemctl restart elasticsearch'

/usr/share/elasticsearch/bin/elasticsearch-setup-passwords interactive
elastic
echo "----------------------" 

echo " ELK OPTIMIZING " 

echo "----------------------" 

echo '- nofile 65536' >> /etc/security/limits.conf

echo "-------------------------------" 

echo " Metricbeat CLUSTER MONITORING " 

echo "-------------------------------" 

sudo yum -y install metricbeat

sudo metricbeat modules disable system
sudo metricbeat modules enable elasticsearch-xpack
--kibana--

sudo metricbeat modules enable kibana-xpack
nano /etc/metricbeat/modules.d/kibana-xpack.yml

- module: kibana
  metricsets:
    - stats
  period: 10s
  hosts: ["https://elk:5601"]
  #basepath: ""
  username: "remote_monitoring_user"
  password: "elastic"
  xpack.enabled: true
  ssl.enabled: true
  ssl.certificate_authorities: ["/etc/metricbeat/security/ca.pem"]
  
nano /etc/metricbeat/metricbeat.yml

   hosts: ["https://es01:9200", "https://es02:9200"]
   
   username: "elastic"
  password: "elastic"
   
monitoring.enabled: true

--kibana--

sudo mkdir /etc/metricbeat/security

sudo cp ca.pem /etc/metricbeat/security
sudo chmod -R 0750 /etc/metricbeat/security


###########  nano /etc/metricbeat/modules.d/elasticsearch-xpack.yml
# Module: elasticsearch
# Docs: https://www.elastic.co/guide/en/beats/metricbeat/7.x/metricbeat-module-elasticsearch.html

- module: elasticsearch
  xpack.enabled: true
  period: 10s
  hosts: ["https://es01:9200"]
  username: "remote_monitoring_user"
  password: "elastic"
  scope: node
  ssl.enabled: true
  ssl.certificate_authorities: ["/etc/metricbeat/security/ca.pem"]
  #ssl.certificate: "/etc/pki/client/cert.pem"
  #ssl.key: "/etc/pki/client/cert.key"
  #ssl.verification_mode: "full"
  
###########  nano /etc/metricbeat/metricbeat.yml  
output.elasticsearch:
  # Array of hosts to connect to.
  hosts: ["https://es01:9200"]

  # Protocol - either `http` (default) or `https`.
  #protocol: "https"

  # Authentication credentials - either API key or username/password.
  #api_key: "id:api_key"
  username: "elastic"
  password: "elastic"
  
monitoring.enabled: true
####################


sudo systemctl enable --now metricbeat
systemctl enable elasticsearch

curl -XGET 'http://es01:9200/_cluster/health'


echo "----------------------" 

echo " kibana CONFIG " 

echo "----------------------" 

server.port: 5601
server.host: "0.0.0.0"
server.name: "kibana"
elasticsearch.hosts:
  - https://es01:9200
  - https://es02:9200
  - https://es03:9200
elasticsearch.username: "kibana"
elasticsearch.password: "elastic"
server.ssl.enabled: true
server.ssl.certificate: /etc/kibana/security/http.pem
server.ssl.key: /etc/kibana/security/http.key
elasticsearch.ssl.verificationMode: none
xpack.security.encryptionKey: "jldfi8e9))kldop011!ufndsfieUIT54"
xpack.encryptedSavedObjects.encryptionKey: "jldfi8e9))kldop011!ufndsfieUIT54"
xpack.security.enabled: true
xpack.fleet.enabled: true
elasticsearch.ssl.certificateAuthorities: [ "/etc/kibana/security/ca.pem" ]

server.publicBaseUrl: "http://elk.diosen.de"

############

sudo metricbeat modules enable kibana-xpack

nano /etc/metricbeat/modules.d/kibana-xpack.yml


# Module: kibana
# Docs: https://www.elastic.co/guide/en/beats/metricbeat/7.x/metricbeat-module-kibana.html

- module: kibana
  metricsets:
    - stats
  xpack.enabled: true
  period: 10s
  hosts: ["https://elk:5601"]
  username: "remote_monitoring_user"
  password: "elastic"
  ssl.enabled: true
  ssl.certificate_authorities: ["/etc/metricbeat/security/ca.pem"]
  
  
####FLEET SERVER###

elastic-agent enroll -f --url=https://logstash.diosen.de:8220 --fleet-server-es=https://siem.diosen.de:9200 --fleet-server-service-token=AAEAAWVsYXN0aWMvZmxlZXQtc2VydmVyL3Rva2VuLTE2Mjg0NTUxNDA4Mjg6S2hBa2ktQlJRYy13d2d5ZzJ5MVo4dw --fleet-server-es-ca=/etc/elastic-agent/ca.pem --fleet-server-cert=/etc/elastic-agent/siem.pem --fleet-server-cert-key=/etc/elastic-agent/siem.key

####FLEET Agent###

#Windows
.\elastic-agent.exe install -f --url=https://logstash.diosen.de:8220 --enrollment-token=aHVrbGtub0JjbXdzRFIwZVFaeVg6Y004OEpQWTRTR0NkY1RELWlfdG9DZw==                                                                                                              d9-83e02d6e256b --fleet-server-es-ca=/etc/elastic-agent/ca.pem


#Linux Debian
sudo elastic-agent enroll --url=https://logstash.diosen.de:8220 --enrollment-token=azM1WXBub0JPT0JoM0dMMnVkVXo6eTFnUVNuZXVTUy1XRE1Wd1JXeU40UQ== --fleet-server-es-ca=/etc/elastic-agent/ca.pem
#apt
sudo apt-get install apt-transport-https gnupg2
wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -
echo "deb https://artifacts.elastic.co/packages/7.x/apt stable main" | sudo tee -a /etc/apt/sources.list.d/elastic-7.x.list
sudo apt update && apt-get install elastic-agent

#cert anlegen
cp /etc/elastic-agent/ca.pem /usr/local/share/ca-certificates/ca.crt
update-ca-certificates
systemctl enable --now elastic-agent

sudo ./elastic-agent install -f --url=https://es01.diosen.de:8220 --enrollment-token=VlRXOU8zc0JhOVltVWtLME5ZVm86bmdrM3lQN19Ra2EtaDJZV0w1b25fQQ== --fleet-server-es-ca=/etc/elastic-agent/ca.pem



